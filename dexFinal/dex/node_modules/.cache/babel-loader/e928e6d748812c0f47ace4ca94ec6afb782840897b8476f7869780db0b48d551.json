{"ast":null,"code":"var _jsxFileName = \"/home/abisma/made-with-abisma/git-clones/dexFinal/dexFinal/dex/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { configureChains, mainnet, WagmiConfig, createClient } from \"wagmi\";\nimport { publicProvider } from \"wagmi/providers/public\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  provider,\n  webSocketProvider\n} = configureChains([mainnet], [publicProvider()]);\nconst client = createClient({\n  autoConnect: true,\n  provider,\n  webSocketProvider\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(WagmiConfig, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","configureChains","mainnet","WagmiConfig","createClient","publicProvider","provider","webSocketProvider","client","autoConnect","root","createRoot","document","getElementById","render"],"sources":["/home/abisma/made-with-abisma/git-clones/dexFinal/dexFinal/dex/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { configureChains, mainnet, WagmiConfig, createClient } from \"wagmi\";\nimport { publicProvider } from \"wagmi/providers/public\";\n\nconst { provider, webSocketProvider } = configureChains(\n  [mainnet],\n  [publicProvider()]\n);\n\nconst client = createClient({\n  autoConnect: true,\n  provider,\n  webSocketProvider,\n});\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <WagmiConfig client={client}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </WagmiConfig>\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,EAAEC,YAAY,QAAQ,OAAO;AAC3E,SAASC,cAAc,QAAQ,wBAAwB;AAAC;AAExD,MAAM;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,GAAGN,eAAe,CACrD,CAACC,OAAO,CAAC,EACT,CAACG,cAAc,EAAE,CAAC,CACnB;AAED,MAAMG,MAAM,GAAGJ,YAAY,CAAC;EAC1BK,WAAW,EAAE,IAAI;EACjBH,QAAQ;EACRC;AACF,CAAC,CAAC;AAGF,MAAMG,IAAI,GAAGZ,QAAQ,CAACa,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,WAAW;IAAC,MAAM,EAAEN,MAAO;IAAA,uBAC1B,QAAC,aAAa;MAAA,uBACZ,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACO;IAAA;IAAA;IAAA;EAAA;AACJ;EAAA;EAAA;EAAA;AAAA,QACG,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}